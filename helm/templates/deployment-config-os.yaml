{{- if and .Values.__services .Values.serviceName}}
{{- $projectName := .Values.__project_name}}
{{- $namespace := .Values.namespace | lower}}
{{- $isProduction := eq $namespace .Values.__production_namespace}}

{{- $serviceName := .Values.serviceName}}
{{- $serviceMap := index .Values.__services $serviceName}}

{{- $tag := "latest"}}
{{- $serviceImage := index $serviceMap "image"}}
{{- $projectImage := printf "docker-registry.default.svc:5000/%s/%s:%s" .Values.__gcp_project_id $serviceImage $tag}}
{{- $image := (index $serviceMap "image_in_project") | ternary $projectImage $serviceImage}}
{{- $imageStreamTag := printf "%s:%s" $serviceName $tag}}

{{- $command := index $serviceMap "command"}}

{{- $env := index $serviceMap "env"}}

{{- $waitForService := index $serviceMap "wait_for_service"}}
{{- $preStartupCommand := index $serviceMap "pre_startup_command"}}

{{- $sshKey := index $serviceMap "ssh_key"}}

apiVersion: v1
kind: DeploymentConfig

metadata:
    name: {{$serviceName}}
    labels:
        app: {{$projectName}}
        run: {{$serviceName}}

spec:
    replicas: {{.Values.replicas | default 1}}
    selector:
        run: {{$serviceName}}
    template:
        metadata:
            labels:
                run: {{$serviceName}}
        spec:
            containers:
            - name: {{$serviceName}}
              image: {{$image}}
              imagePullPolicy: Always
              ports:
              - containerPort: {{index $serviceMap "container_port"}}

              {{- if $command}}
              command:
                {{- range $command}}
                - {{. | quote}}
                {{- end}}
              {{- end}}

              env:
              {{- range $key, $value := .Values.__services}}
              - name: {{$key | upper | replace "-" "_"}}_PORT
                value: {{$value.external_port | quote}}
              - name: {{$key | upper | replace "-" "_"}}_HOST
                {{- if $isProduction}}
                value: {{$value.host | quote}}
                {{- else}}
                value: {{printf "%s.%s" $namespace $value.host | quote}}
                {{- end}}
              {{- end}}

              {{- range $env}}
              - name: {{.name}}
                value: {{.value | quote}}
              {{- end}}

              {{- if (index $serviceMap "secrets")}}
              {{- range (index $serviceMap "secrets" "variables")}}
              - name: {{.}}
                valueFrom:
                    secretKeyRef:
                        name: {{index $serviceMap "secrets" "name"}}
                        key: {{.}}
              {{- end}}
              {{- end}}

              {{- if $sshKey}}
              volumeMounts:
                - name: {{index $sshKey "secret_name"}}
                  mountPath: {{index $sshKey "mount_path"}}
                  readOnly: true
                - name: {{index $sshKey "known_hosts_secret_name"}}
                  mountPath: {{index $sshKey "known_hosts_mount_path"}}
                  readOnly: true
              {{- end}}
              
            {{- if $sshKey}}
            volumes:
              - name: {{index $sshKey "secret_name"}}
                secret:
                    secretName: {{index $sshKey "secret_name"}}
              - name: {{index $sshKey "known_hosts_secret_name"}}
                secret:
                    secretName: {{index $sshKey "known_hosts_secret_name"}}
            {{- end}}

            {{- if or $waitForService $preStartupCommand}}
            initContainers:
              {{- if $waitForService}}
              - name: wait-for-service
                image: busybox
                command: ["sh", "-c", {{printf "until nslookup %s; do echo waiting for %s; sleep 2; done;" $waitForService $waitForService | quote}}]
              {{- end}}
              
              {{- if $preStartupCommand}}
              - name: pre-startup
                image: {{$image}}
                command: ["sh", "-c", {{$preStartupCommand | quote}}]
                {{- if $env}}
                env:
                  {{- range $env}}
                  - name: {{.name}}
                    value: {{.value | quote}}
                  {{- end}}
                {{- end}}
              {{- end}}
            {{- end}}

    triggers:
    - type: ConfigChange
    - type: ImageChange
      imageChangeParams:
          automatic: true
          containerNames:
          - {{$serviceName}}
          from:
              kind: ImageStreamTag
              name: {{$imageStreamTag | quote}}

{{- end}}
